databases:
  - name: posgres
    plan: free
    databaseName: posgres_cafn
    user: posgres_cafn_user
    region: frankfurt

services:

  - type: web
    name: api_ktor
    region: frankfurt
    repo: https://github.com/diegopastrana/INSO-II.git
    rootDir: Backend/ktor-project   # Aqu√≠ debe estar el Dockerfile
    runtime: docker
    plan: free
    autoDeploy: false
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: posgres
          property: connectionString
      - key: GOOGLE_CLIENT_ID
        value: 374053166012-7211t8lpg7bsr5i47khrf16prskb6tf5.apps.googleusercontent.com
      - key: GOOGLE_CLIENT_SECRET
        value: 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
      - key: STRIPE_API_KEY
        value: sk_test_51RK0vPRs3l2T7fmczX85zKHPtYQEd0lCc2cpOfoj8d6MuTnmeh6uJsucn1PdSxfTq5QhI6SoQnYWkpnznGWFG5mk00EJnNfep1
      - key: JWT_SECRET
        value: pipo1234
      - key: FRONTEND_URL
        fromService:
          name: next-js
          type: web
          envVarKey: RENDER_EXTERNAL_URL

  - type: web
    name: next-js
    region: frankfurt
    repo: https://github.com/diegopastrana/INSO-II.git
    rootDir: Front/retro_game
    runtime: node
    plan: free
    autoDeploy: false
    buildCommand: "npm install && npm run build"
    startCommand: "npm start"
    envVars:
      - key: NODE_ENV
        value: production
      - key: STRIPE_PUBLICABLE_KEY
        value: pk_test_51RK0vPRs3l2T7fmcHfTEXhsV94OFpO8s61CoqhczrFFnHKkVV3vyJiTsb1VExB9N2xlUEnr2bGWksc8Hei37yWev00BqDd1nnl
      - key: NEXT_PUBLIC_API_URL
        fromService:
          name: api_ktor
          type: web
          envVarKey: RENDER_EXTERNAL_URL
